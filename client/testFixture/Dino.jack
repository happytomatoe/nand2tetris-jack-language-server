class Dino {
  field int x,y,newY,startY,velocity, jumpVelocity,gravity, runStepChangeNTick,counter;
  field int imageW, imageH;
  field boolean jumping, runningStep;
  constructor Dino new(int x_,int y_,int jumpVelocity_, int gravity_) {
    let x=x_;
    let y=y_;
    let startY=y;
    let gravity= gravity_;
    let jumpVelocity =jumpVelocity_;
    let imageW = 40;
    let imageH = 43;
    let runStepChangeNTick=3;
    return this;
  }
  method void move(int x_,int y_){
    let x=x_;
    let y=y_;
    return;
  }
  method void dispose() {
    do Memory.deAlloc(this);
    return;
  }
  method int getX(){
    return x;
  }
  method int getY(){
    return y;
  }

  method int getW(){
    return imageW;
  }
  method int getH(){
    return imageH;
  }
  method void update(){
    
   do hide();
   if((~jumping) & (Keys.upPressed())){
    let jumping=true;
    let velocity=jumpVelocity;
  }
  if(jumping){
    do calcNewPos();  
    }else{
      do run();
    }

    do show();
    let counter=counter+1;
    if(counter>29999){
      let counter=0;
    }
    return;
  }

  method void calcNewPos(){
    var int doubleT,timestep;
    let timestep=1;
    let doubleT= timestep*timestep;
    let newY = y + (velocity*timestep) + ((gravity*doubleT)/2);
    if((newY>startY)|(newY=startY)){
      let jumping=false;
      let y=startY;
      }else{
        let y=newY;
        let velocity= velocity+Math.multiply(gravity,timestep);
      }
      return;
    }

    method void hide() {
      do Screen.setColor(false);
      do drawCommonPart();
      //TODO: draw rectangle
      do drawFeetRun2();
      do drawFeetRun1();
      return;
    }

    method void run(){
      if(MathCustom.mod(counter,runStepChangeNTick)=0){
        let runningStep=~runningStep;
      }
      return;
    }

    method void show() {
      do Screen.setColor(true);
      do drawNormal();
      return;
    }

    method void die() {
      do hide();
      do Screen.setColor(true);
      do drawCommonPart();
      do drawNormalFeet();
      do drawDeathEye();
      return;
    }

    method void drawNormal(){
      do drawCommonPart();
      if(~jumping){
        if(runningStep){
          do drawFeetRun2();
          }else{
            do drawFeetRun1();
          }
          }else{
            do drawNormalFeet();
          }
          return;
        }


        method void drawCommonPart() {
          do Screen.drawRectangle(x+22,y,x+37,y+2);
          do Screen.drawRectangle(x+20,y+2,x+21,y+34);
          do Screen.drawRectangle(x+38,y+2,x+39,y+10);
          do Screen.drawRectangle(x+22,y+3,x+23,y+32);
          do Screen.drawRectangle(x+26,y+3,x+37,y+10);
          do Screen.drawRectangle(x+24,y+5,x+25,y+30);
          do Screen.drawRectangle(x+26,y+11,x+29,y+14);
          do Screen.drawRectangle(x+30,y+13,x+35,y+14);
          do Screen.drawRectangle(x,y+15,x+1,y+26);
          do Screen.drawRectangle(x+18,y+15,x+19,y+34);
          do Screen.drawRectangle(x+26,y+15,x+27,y+27);
          do Screen.drawRectangle(x+15,y+17,x+17,y+34);
          do Screen.drawRectangle(x+2,y+19,x+3,y+28);
          do Screen.drawRectangle(x+12,y+19,x+14,y+34);
          do Screen.drawRectangle(x+28,y+19,x+31,y+20);
          do Screen.drawRectangle(x+4,y+21,x+5,y+30);
          do Screen.drawRectangle(x+10,y+21,x+11,y+34);
          do Screen.drawRectangle(x+30,y+21,x+31,y+22);
          do Screen.drawRectangle(x+6,y+23,x+9,y+32);
          do Screen.drawRectangle(x+8,y+33,x+9,y+34);
          return;
        }


        method void drawNormalFeet() {
          do Screen.drawRectangle(x+10,y+35,x+15,y+36);
          do Screen.drawRectangle(x+18,y+35,x+21,y+36);
          do Screen.drawRectangle(x+10,y+37,x+13,y+38);
          do Screen.drawRectangle(x+20,y+37,x+21,y+42);
          do Screen.drawRectangle(x+10,y+39,x+11,y+42);
          do Screen.drawRectangle(x+12,y+41,x+13,y+42);
          do Screen.drawRectangle(x+22,y+41,x+23,y+42);
          return;
        }

        method void drawFeetRun1() {
          do Screen.drawRectangle(x+10,y+35,x+15,y+36);
          do Screen.drawRectangle(x+20,y+35,x+24,y+36);
          do Screen.drawRectangle(x+10,y+37,x+13,y+38);
          do Screen.drawRectangle(x+10,y+39,x+11,y+42);
          do Screen.drawRectangle(x+12,y+41,x+13,y+42);
          return;
        }
        method void drawFeetRun2() {
          do Screen.drawRectangle(x+10,y+35,x+13,y+36);
          do Screen.drawRectangle(x+18,y+35,x+21,y+36);
          do Screen.drawRectangle(x+12,y+37,x+15,y+38);
          do Screen.drawRectangle(x+20,y+37,x+21,y+42);
          do Screen.drawRectangle(x+22,y+41,x+23,y+42);
          return;
        }
        method void drawDeathEye() {
          do Screen.setColor(false);
          do Screen.drawRectangle(x+24,y+3,x+27,y+6);
          do Screen.setColor(true);
          do Screen.drawRectangle(x+25,y+4,x+26,y+5);
          return;
        }
      }  
