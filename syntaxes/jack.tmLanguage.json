{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "jack",
  "scopeName": "source.jack",
  "patterns": [
    {
      "include": "#comment"
    },

    {
      "include": "#blockComment"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#boolean"
    },
    {
      "include": "#constant"
    },
    {
      "include": "#number"
    },
    {
      "include": "#subroutineName"
    },
    {
      "include": "#grammar"
    },
    {
      "include": "#punctuation"
    }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.jack",
          "match": "\\b(while|return|if|else)\\b"
        },
        {
          "name": "keyword.other.jack",
          "match": "\\b(var|static|field|function|method|constructor|this|class|function|method)\\b"
        },

        {
          "name": "keyword.other.unit.jack",
          "match": "\\b(let|do)\\b"
        },
        {
          "match": "(\\+|-|\\*|/)",
          "name": "keyword.operator.arithmetic.jack"
        },
        {
          "match": "(<|>|=|~)",
          "name": "keyword.operator.comparison.jack"
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.jack",
      "begin": "\"",
      "end": "\""
    },
    "constant": {
      "match": "\\b(?:true|false|null)\\b",
      "name": "constant.language.jack"
    },
    "number": {
      "match": "[0-9]+",
      "name": "constant.numeric.jack"
    },
    "comment": {
      "patterns": [
        {
          "name": "comment.line.double-slash",
          "begin": "//",
          "end": "\n"
        }
      ]
    },
    "blockComment": {
      "patterns": [
        {
          "begin": "\\/\\*\\*",
          "end": "\\*\\/",
          "name": "comment.block.jack"
        }
      ]
    },
    "subroutineName": {
      "patterns": [
        {
          "name": "entity.name.function",
          "match": "([a-z_]|[A-Z]|[0-9])+(?=\\()"
        }
      ]
    },
    "grammar": {
      "patterns": [
        {
          "name": "entity.name.type.variable.jack",
          "match": "\\b(int|char|void|boolean)\\b"
        },
        {
          "name": "variable.other.constant.jack",
          "match": "\\b[a-z_]([A-Za-z0-9_])*\\b"
        },
        {
          "name": "entity.name.type.class",
          "match": "\\b[A-Z]([A-Za-z0-9_])*\\b"
        }
      ]
    },
    "punctuation": {
      "patterns": [
        {
          "match": "\\{",
          "name": "punctuation.definition.brace.curly.jack"
        },
        {
          "match": "\\}",
          "name": "punctuation.definition.brace.curly.jack"
        },
        {
          "match": "\\(",
          "name": "punctuation.definition.parenthesis.round.jack"
        },
        {
          "match": "\\)",
          "name": "punctuation.definition.parenthesis.round.jack"
        },
        {
          "match": "\\[",
          "name": "punctuation.definition.bracket.square.jack"
        },
        {
          "match": "\\]",
          "name": "punctuation.definition.bracket.square.jack"
        },
        {
          "match": "\\.",
          "name": "punctuation.separator.period.jack"
        },
        {
          "match": ",",
          "name": "punctuation.separator.comma.jack"
        },
        {
          "match": ";",
          "name": "punctuation.terminator.statement.jack"
        }
      ]
    }
  }
}
